/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  FHE_BLOGCrutch,
  FHE_BLOGCrutchInterface,
} from "../FHE_BLOGCrutch";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DATA_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOKEN_URI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nft",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "relayer_id",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "_nonce",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nft",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "relayer_id",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_nonce",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "generateJwt",
    outputs: [
      {
        components: [
          {
            internalType: "uint64[2]",
            name: "p",
            type: "uint64[2]",
          },
        ],
        internalType: "struct DecryptedBlog",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "relayer_id",
        type: "uint256",
      },
    ],
    name: "getCid",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokenCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes[]",
            name: "cid",
            type: "bytes[]",
          },
          {
            internalType: "uint64[2][]",
            name: "p",
            type: "uint64[2][]",
          },
          {
            internalType: "bytes32[]",
            name: "publicKey",
            type: "bytes32[]",
          },
        ],
        internalType: "struct BlogStorage",
        name: "_data",
        type: "tuple",
      },
      {
        internalType: "address[]",
        name: "_relayer_addresses",
        type: "address[]",
      },
      {
        internalType: "string",
        name: "_nft_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_nft_short_name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintNft",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "reward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_tokenCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nft",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "relayer_id",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "verifySignature",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801562000010575f80fd5b506200001b62000021565b620000d5565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000725760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620000d25780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6125e880620000e35f395ff3fe6080604052600436106101af575f3560e01c806370a08231116100e7578063b88d4fde11610087578063c87b56dd11610062578063c87b56dd146104af578063d319896e146104ce578063e985e9c5146104ed578063eb9600f214610553575f80fd5b8063b88d4fde1461045c578063ba071e1b1461047b578063c2229fea146104a7575f80fd5b806395d89b41116100c257806395d89b41146103f5578063a035b1fe14610409578063a22cb4651461041e578063ab7cf6851461043d575f80fd5b806370a08231146103a357806378ce9035146103c25780638da5cb5b146103d6575f80fd5b8063247f024d1161015257806342842e0e1161012d57806342842e0e146103275780636352211e146103465780636353586b146103655780636e02007d14610390575f80fd5b8063247f024d146102d45780633644e515146102f35780633beaa6ab14610308575f80fd5b8063095ea7b31161018d578063095ea7b31461023f5780630b21a83b1461026057806320606b701461028257806323b872dd146102b5575f80fd5b806301ffc9a7146101b357806306fdde03146101e7578063081812fc14610208575b5f80fd5b3480156101be575f80fd5b506101d26101cd366004611cb9565b610586565b60405190151581526020015b60405180910390f35b3480156101f2575f80fd5b506101fb6105d7565b6040516101de9190611d1e565b348015610213575f80fd5b50610227610222366004611d30565b61068b565b6040516001600160a01b0390911681526020016101de565b34801561024a575f80fd5b5061025e610259366004611d62565b6106d1565b005b34801561026b575f80fd5b506102745f5481565b6040519081526020016101de565b34801561028d575f80fd5b506102747f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81565b3480156102c0575f80fd5b5061025e6102cf366004611d8a565b6106e0565b3480156102df575f80fd5b506101d26102ee366004611e70565b610784565b3480156102fe575f80fd5b5061027460075481565b348015610313575f80fd5b506101fb610322366004611d30565b61084c565b348015610332575f80fd5b5061025e610341366004611d8a565b6108f9565b348015610351575f80fd5b50610227610360366004611d30565b610913565b348015610370575f80fd5b5061027461037f366004611edd565b60056020525f908152604090205481565b34801561039b575f80fd5b505f54610274565b3480156103ae575f80fd5b506102746103bd366004611edd565b61091d565b3480156103cd575f80fd5b506101fb610988565b3480156103e1575f80fd5b50600854610227906001600160a01b031681565b348015610400575f80fd5b506101fb6109a4565b348015610414575f80fd5b5061027460095481565b348015610429575f80fd5b5061025e610438366004611ef6565b6109f5565b348015610448575f80fd5b5061025e610457366004611fb5565b610a00565b348015610467575f80fd5b5061025e610476366004612079565b610f20565b348015610486575f80fd5b5061049a6104953660046120dd565b610f3d565b6040516101de9190612131565b61025e611013565b3480156104ba575f80fd5b506101fb6104c9366004611d30565b6110c0565b3480156104d9575f80fd5b5061025e6104e8366004612184565b6110e1565b3480156104f8575f80fd5b506101d26105073660046121c4565b6001600160a01b039182165f9081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab00793056020908152604080832093909416825291909152205460ff1690565b34801561055e575f80fd5b506102747f39f4c5dc4987ba10c22bccffc6aa83320b32e5efb44bc790d0fffcbb8492946281565b5f6001600160e01b031982166380ac58cd60e01b14806105b657506001600160e01b03198216635b5e139f60e01b145b806105d157506301ffc9a760e01b6001600160e01b03198316145b92915050565b7f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab00793008054606091908190610609906121f5565b80601f0160208091040260200160405190810160405280929190818152602001828054610635906121f5565b80156106805780601f1061065757610100808354040283529160200191610680565b820191905f5260205f20905b81548152906001019060200180831161066357829003601f168201915b505050505091505090565b5f61069582611203565b505f8281527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930460205260409020546001600160a01b03166105d1565b6106dc82823361125a565b5050565b6001600160a01b03831615806106fd57506001600160a01b038216155b6107745760405162461bcd60e51b815260206004820152602e60248201527f4e6f6e5472616e736665727261626c65455243373231546f6b656e3a206e6f6e60448201527f207472616e736665727261626c6500000000000000000000000000000000000060648201526084015b60405180910390fd5b61077f838383611267565b505050565b604080517f39f4c5dc4987ba10c22bccffc6aa83320b32e5efb44bc790d0fffcbb8492946260208083019190915281830188905260ff871660608301526001600160a01b038516608083015260a08083018790528351808403909101815260c08301845280519082012060075461190160f01b60e085015260e28401526101028084018290528451808503909101815261012290930190935281519101205f91908261083082866112ea565b6001600160a01b03878116911614935050505095945050505050565b606060015f0182815481106108635761086361222d565b905f5260205f20018054610876906121f5565b80601f01602080910402602001604051908101604052809291908181526020018280546108a2906121f5565b80156108ed5780601f106108c4576101008083540402835291602001916108ed565b820191905f5260205f20905b8154815290600101906020018083116108d057829003601f168201915b50505050509050919050565b61077f83838360405180602001604052805f815250610f20565b5f6105d182611203565b5f7f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab00793006001600160a01b038316610968576040516322718ad960e21b81525f600482015260240161076b565b6001600160a01b039092165f908152600390920160205250604090205490565b6040518060800160405280605781526020016125856057913981565b7f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930180546060917f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930091610609906121f5565b6106dc338383611312565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff165f81158015610a4a5750825b90505f8267ffffffffffffffff166001148015610a665750303b155b905081158015610a74575080155b15610a925760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610ac657845468ff00000000000000001916680100000000000000001785555b610b378a8a8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525050604080516020601f8e018190048102820181019092528c815292508c91508b90819084018382808284375f920191909152506113d492505050565b5f5b610b438e80612241565b9050811015610dc1576001610b588f80612241565b83818110610b6857610b6861222d565b9050602002810190610b7a9190612287565b82546001810184555f938452602090932090920191610b99918361230e565b50610ba2611bb3565b600280546001810182555f829052610be0917f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace909101908390611bd1565b508e8060200190610bf191906123c8565b83818110610c0157610c0161222d565b9050604002015f60028110610c1857610c1861222d565b602002016020810190610c2b919061240e565b6002805484908110610c3f57610c3f61222d565b5f918252602082200190600491828204019190066008026101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508e8060200190610c8a91906123c8565b83818110610c9a57610c9a61222d565b905060400201600160028110610cb257610cb261222d565b602002016020810190610cc5919061240e565b6002805484908110610cd957610cd961222d565b5f9182526020909120016001600491828204019190066008026101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060016002018f8060400190610d2b9190612241565b84818110610d3b57610d3b61222d565b83546001810185555f94855260209485902091909402929092013591909201555060068e8e84818110610d7057610d7061222d565b9050602002016020810190610d859190611edd565b8154600180820184555f93845260209093200180546001600160a01b0319166001600160a01b0392909216919091179055919091019050610b39565b505f8055604080518082018252600781527f466865426c6f67000000000000000000000000000000000000000000000000006020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f918101919091527fc667c8a336a824636925e27af98cf090f0f09ad8b8a6e2513ecf75627dc4efcb918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160408051601f198184030181529190528051602090910120600755600880546001600160a01b0319163217905560098690558315610f1157845468ff000000000000000019168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050505050565b610f2b8484846106e0565b610f37848484846113e6565b50505050565b610f45611c78565b836001600160a01b0316610f5887610913565b6001600160a01b031614610f6e57610f6e612427565b610f7b8686858786610784565b1515600114610f8c57610f8c612427565b610f94611c78565b610f9c611bb3565b6002805460ff8916908110610fb357610fb361222d565b5f9182526020909120015467ffffffffffffffff1681526002805460ff8916908110610fe157610fe161222d565b5f918252602091829020015468010000000000000000900467ffffffffffffffff169082015281529695505050505050565b662386f26fc1000034101561106a5760405162461bcd60e51b815260206004820152601c60248201527f4648455f424c4f473a20696e73756666696369656e742066756e647300000000604482015260640161076b565b611075335f54611505565b5f5461108290600161243b565b5f9081556008546040516001600160a01b03909116913480156108fc02929091818181858888f193505050501580156110bd573d5f803e3d5ffd5b50565b60606040518060800160405280605781526020016125856057913992915050565b826001600160a01b03166110f486610913565b6001600160a01b03161461110a5761110a612427565b61112185858467ffffffffffffffff168685610784565b151560011461113257611132612427565b6001600160a01b0383165f90815260046020908152604080832067ffffffffffffffff8616845290915281205460ff16151590036111fc576001600160a01b0383165f90815260046020908152604080832067ffffffffffffffff861684529091528120805460ff1916600190811790915560068054919260059290919060ff89169081106111c3576111c361222d565b5f9182526020808320909101546001600160a01b03168352820192909252604001812080549091906111f690849061243b565b90915550505b5050505050565b5f8181527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930260205260408120546001600160a01b0316806105d157604051637e27328960e01b81526004810184905260240161076b565b61077f838383600161151e565b6001600160a01b03821661129057604051633250574960e11b81525f600482015260240161076b565b5f61129c838333611681565b9050836001600160a01b0316816001600160a01b031614610f37576040516364283d7b60e01b81526001600160a01b038086166004830152602482018490528216604482015260640161076b565b5f805f806112f886866117bb565b9250925092506113088282611804565b5090949350505050565b7f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab00793006001600160a01b03831661136557604051630b61174360e31b81526001600160a01b038416600482015260240161076b565b6001600160a01b038481165f818152600584016020908152604080832094881680845294825291829020805460ff191687151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a350505050565b6113dc6118bc565b6106dc828261190c565b6001600160a01b0383163b15610f3757604051630a85bd0160e11b81526001600160a01b0384169063150b7a029061142890339088908790879060040161245a565b6020604051808303815f875af1925050508015611462575060408051601f3d908101601f1916820190925261145f91810190612495565b60015b6114c9573d80801561148f576040519150601f19603f3d011682016040523d82523d5f602084013e611494565b606091505b5080515f036114c157604051633250574960e11b81526001600160a01b038516600482015260240161076b565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b146111fc57604051633250574960e11b81526001600160a01b038516600482015260240161076b565b6106dc828260405180602001604052805f81525061194f565b7f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300818061155357506001600160a01b03831615155b15611651575f61156285611203565b90506001600160a01b0384161580159061158e5750836001600160a01b0316816001600160a01b031614155b80156115de57506001600160a01b038082165f9081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079305602090815260408083209388168352929052205460ff16155b156116075760405163a9fbf51f60e01b81526001600160a01b038516600482015260240161076b565b821561164f5784866001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5f93845260040160205250506040902080546001600160a01b0319166001600160a01b0392909216919091179055565b5f8281527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930260205260408120547f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300906001600160a01b03908116908416156116ee576116ee818587611965565b6001600160a01b0381161561172a576117095f865f8061151e565b6001600160a01b0381165f908152600383016020526040902080545f190190555b6001600160a01b0386161561175a576001600160a01b0386165f9081526003830160205260409020805460010190555b5f85815260028301602052604080822080546001600160a01b0319166001600160a01b038a811691821790925591518893918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a495945050505050565b5f805f83516041036117f2576020840151604085015160608601515f1a6117e4888285856119c9565b9550955095505050506117fd565b505081515f91506002905b9250925092565b5f826003811115611817576118176124b0565b03611820575050565b6001826003811115611834576118346124b0565b036118525760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115611866576118666124b0565b036118875760405163fce698f760e01b81526004810182905260240161076b565b600382600381111561189b5761189b6124b0565b036106dc576040516335e2f38360e21b81526004810182905260240161076b565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff1661190a57604051631afcd79f60e31b815260040160405180910390fd5b565b6119146118bc565b7f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab00793008061194084826124c4565b5060018101610f3783826124c4565b6119598383611a91565b61077f5f8484846113e6565b611970838383611af2565b61077f576001600160a01b03831661199e57604051637e27328960e01b81526004810182905260240161076b565b60405163177e802f60e01b81526001600160a01b03831660048201526024810182905260440161076b565b5f80807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115611a0257505f91506003905082611a87565b604080515f808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611a53573d5f803e3d5ffd5b5050604051601f1901519150506001600160a01b038116611a7e57505f925060019150829050611a87565b92505f91508190505b9450945094915050565b6001600160a01b038216611aba57604051633250574960e11b81525f600482015260240161076b565b5f611ac683835f611681565b90506001600160a01b0381161561077f576040516339e3563760e11b81525f600482015260240161076b565b5f6001600160a01b03831615801590611bab5750826001600160a01b0316846001600160a01b03161480611b6957506001600160a01b038085165f9081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079305602090815260408083209387168352929052205460ff165b80611bab57505f8281527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930460205260409020546001600160a01b038481169116145b949350505050565b60405180604001604052806002906020820280368337509192915050565b600183019183908215611c68579160200282015f5b83821115611c3257835183826101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055509260200192600801602081600701049283019260010302611be6565b8015611c665782816101000a81549067ffffffffffffffff0219169055600801602081600701049283019260010302611c32565b505b50611c74929150611c90565b5090565b6040518060200160405280611c8b611bb3565b905290565b5b80821115611c74575f8155600101611c91565b6001600160e01b0319811681146110bd575f80fd5b5f60208284031215611cc9575f80fd5b8135611cd481611ca4565b9392505050565b5f81518084525f5b81811015611cff57602081850181015186830182015201611ce3565b505f602082860101526020601f19601f83011685010191505092915050565b602081525f611cd46020830184611cdb565b5f60208284031215611d40575f80fd5b5035919050565b80356001600160a01b0381168114611d5d575f80fd5b919050565b5f8060408385031215611d73575f80fd5b611d7c83611d47565b946020939093013593505050565b5f805f60608486031215611d9c575f80fd5b611da584611d47565b9250611db360208501611d47565b9150604084013590509250925092565b803560ff81168114611d5d575f80fd5b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112611df6575f80fd5b813567ffffffffffffffff80821115611e1157611e11611dd3565b604051601f8301601f19908116603f01168101908282118183101715611e3957611e39611dd3565b81604052838152866020858801011115611e51575f80fd5b836020870160208301375f602085830101528094505050505092915050565b5f805f805f60a08688031215611e84575f80fd5b85359450611e9460208701611dc3565b935060408601359250611ea960608701611d47565b9150608086013567ffffffffffffffff811115611ec4575f80fd5b611ed088828901611de7565b9150509295509295909350565b5f60208284031215611eed575f80fd5b611cd482611d47565b5f8060408385031215611f07575f80fd5b611f1083611d47565b915060208301358015158114611f24575f80fd5b809150509250929050565b5f8083601f840112611f3f575f80fd5b50813567ffffffffffffffff811115611f56575f80fd5b6020830191508360208260051b8501011115611f70575f80fd5b9250929050565b5f8083601f840112611f87575f80fd5b50813567ffffffffffffffff811115611f9e575f80fd5b602083019150836020828501011115611f70575f80fd5b5f805f805f805f8060a0898b031215611fcc575f80fd5b883567ffffffffffffffff80821115611fe3575f80fd5b908a01906060828d031215611ff6575f80fd5b90985060208a0135908082111561200b575f80fd5b6120178c838d01611f2f565b909950975060408b013591508082111561202f575f80fd5b61203b8c838d01611f77565b909750955060608b0135915080821115612053575f80fd5b506120608b828c01611f77565b999c989b50969995989497949560800135949350505050565b5f805f806080858703121561208c575f80fd5b61209585611d47565b93506120a360208601611d47565b925060408501359150606085013567ffffffffffffffff8111156120c5575f80fd5b6120d187828801611de7565b91505092959194509250565b5f805f805f60a086880312156120f1575f80fd5b8535945061210160208701611dc3565b935061210f60408701611d47565b925060608601359150608086013567ffffffffffffffff811115611ec4575f80fd5b81516040820190825f5b600281101561216457825167ffffffffffffffff1682526020928301929091019060010161213b565b50505092915050565b803567ffffffffffffffff81168114611d5d575f80fd5b5f805f805f60a08688031215612198575f80fd5b853594506121a860208701611dc3565b93506121b660408701611d47565b9250611ea96060870161216d565b5f80604083850312156121d5575f80fd5b6121de83611d47565b91506121ec60208401611d47565b90509250929050565b600181811c9082168061220957607f821691505b60208210810361222757634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52603260045260245ffd5b5f808335601e19843603018112612256575f80fd5b83018035915067ffffffffffffffff821115612270575f80fd5b6020019150600581901b3603821315611f70575f80fd5b5f808335601e1984360301811261229c575f80fd5b83018035915067ffffffffffffffff8211156122b6575f80fd5b602001915036819003821315611f70575f80fd5b601f82111561077f57805f5260205f20601f840160051c810160208510156122ef5750805b601f840160051c820191505b818110156111fc575f81556001016122fb565b67ffffffffffffffff83111561232657612326611dd3565b61233a8361233483546121f5565b836122ca565b5f601f84116001811461236b575f85156123545750838201355b5f19600387901b1c1916600186901b1783556111fc565b5f83815260208120601f198716915b8281101561239a578685013582556020948501946001909201910161237a565b50868210156123b6575f1960f88860031b161c19848701351681555b505060018560011b0183555050505050565b5f808335601e198436030181126123dd575f80fd5b83018035915067ffffffffffffffff8211156123f7575f80fd5b6020019150600681901b3603821315611f70575f80fd5b5f6020828403121561241e575f80fd5b611cd48261216d565b634e487b7160e01b5f52600160045260245ffd5b808201808211156105d157634e487b7160e01b5f52601160045260245ffd5b5f6001600160a01b0380871683528086166020840152508360408301526080606083015261248b6080830184611cdb565b9695505050505050565b5f602082840312156124a5575f80fd5b8151611cd481611ca4565b634e487b7160e01b5f52602160045260245ffd5b815167ffffffffffffffff8111156124de576124de611dd3565b6124f2816124ec84546121f5565b846122ca565b602080601f831160018114612525575f841561250e5750858301515b5f19600386901b1c1916600185901b17855561257c565b5f85815260208120601f198616915b8281101561255357888601518255948401946001909101908401612534565b508582101561257057878501515f19600388901b60f8161c191681555b505060018460011b0185555b50505050505056fe697066733a2f2f62616679626569673337696f6972373673376d67356f6f6265746e636f6a636d3363336878617379643472766964346a71687934676b61686567342f3f66696c656e616d653d302d5055472e6a736f6ea164736f6c6343000816000a";

type FHE_BLOGCrutchConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FHE_BLOGCrutchConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FHE_BLOGCrutch__factory extends ContractFactory {
  constructor(...args: FHE_BLOGCrutchConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FHE_BLOGCrutch & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FHE_BLOGCrutch__factory {
    return super.connect(runner) as FHE_BLOGCrutch__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FHE_BLOGCrutchInterface {
    return new Interface(_abi) as FHE_BLOGCrutchInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FHE_BLOGCrutch {
    return new Contract(address, _abi, runner) as unknown as FHE_BLOGCrutch;
  }
}
