/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { FHE_BLOG, FHE_BLOGInterface } from "../FHE_BLOG";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "TOKEN_URI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nft",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "relayer_id",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "_nonce",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nft",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "relayer_id",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_nonce",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "generateJwt",
    outputs: [
      {
        components: [
          {
            internalType: "bytes[2]",
            name: "p",
            type: "bytes[2]",
          },
        ],
        internalType: "struct DecryptedBlog",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "relayer_id",
        type: "uint256",
      },
    ],
    name: "getCid",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokenCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "increaseNonce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes[]",
            name: "cid",
            type: "bytes[]",
          },
          {
            internalType: "bytes32[]",
            name: "publicKey",
            type: "bytes32[]",
          },
        ],
        internalType: "struct BlogStorage",
        name: "_data",
        type: "tuple",
      },
      {
        internalType: "bytes[2][]",
        name: "_p",
        type: "bytes[2][]",
      },
      {
        internalType: "string",
        name: "_nft_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_nft_short_name",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "latest_nonce",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintNft",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "reward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_tokenCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nft",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "relayer_id",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "verifySignature",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801562000010575f80fd5b506200001b62000021565b620000d5565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000725760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620000d25780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6125f880620000e35f395ff3fe608060405260043610610199575f3560e01c806370a08231116100dc578063b88d4fde11610087578063c53a029211610062578063c53a02921461048a578063c87b56dd1461049e578063d319896e146104bd578063e985e9c5146104dc575f80fd5b8063b88d4fde14610437578063ba071e1b14610456578063c2229fea14610482575f80fd5b806395d89b41116100b757806395d89b41146103b6578063a22cb465146103ca578063b5ed986c146103e9575f80fd5b806370a082311461036457806378ce9035146103835780638da5cb5b14610397575f80fd5b8063247f024d1161014757806342842e0e1161012257806342842e0e146102e85780636352211e146103075780636353586b146103265780636e02007d14610351575f80fd5b8063247f024d1461028b5780633beaa6ab146102aa5780633d68eb1d146102c9575f80fd5b8063095ea7b311610177578063095ea7b3146102295780630b21a83b1461024a57806323b872dd1461026c575f80fd5b806301ffc9a71461019d57806306fdde03146101d1578063081812fc146101f2575b5f80fd5b3480156101a8575f80fd5b506101bc6101b7366004611c9d565b610542565b60405190151581526020015b60405180910390f35b3480156101dc575f80fd5b506101e5610593565b6040516101c89190611cfb565b3480156101fd575f80fd5b5061021161020c366004611d0d565b610647565b6040516001600160a01b0390911681526020016101c8565b348015610234575f80fd5b50610248610243366004611d3f565b61068d565b005b348015610255575f80fd5b5061025e5f5481565b6040519081526020016101c8565b348015610277575f80fd5b50610248610286366004611d67565b61069c565b348015610296575f80fd5b506101bc6102a5366004611e4d565b610740565b3480156102b5575f80fd5b506101e56102c4366004611d0d565b610808565b3480156102d4575f80fd5b506102486102e3366004611eff565b6108b5565b3480156102f3575f80fd5b50610248610302366004611d67565b610d4b565b348015610312575f80fd5b50610211610321366004611d0d565b610d65565b348015610331575f80fd5b5061025e610340366004611fea565b60056020525f908152604090205481565b34801561035c575f80fd5b505f5461025e565b34801561036f575f80fd5b5061025e61037e366004611fea565b610d6f565b34801561038e575f80fd5b506101e5610dda565b3480156103a2575f80fd5b50600854610211906001600160a01b031681565b3480156103c1575f80fd5b506101e5610df6565b3480156103d5575f80fd5b506102486103e4366004612003565b610e47565b3480156103f4575f80fd5b5061041e610403366004611fea565b60066020525f908152604090205467ffffffffffffffff1681565b60405167ffffffffffffffff90911681526020016101c8565b348015610442575f80fd5b5061024861045136600461203c565b610e52565b348015610461575f80fd5b506104756104703660046120a0565b610e6f565b6040516101c891906120f4565b610248610f6b565b348015610495575f80fd5b50610248611018565b3480156104a9575f80fd5b506101e56104b8366004611d0d565b611069565b3480156104c8575f80fd5b506102486104d736600461214a565b61108a565b3480156104e7575f80fd5b506101bc6104f63660046121bb565b6001600160a01b039182165f9081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab00793056020908152604080832093909416825291909152205460ff1690565b5f6001600160e01b031982166380ac58cd60e01b148061057257506001600160e01b03198216635b5e139f60e01b145b8061058d57506301ffc9a760e01b6001600160e01b03198316145b92915050565b7f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930080546060919081906105c5906121ec565b80601f01602080910402602001604051908101604052809291908181526020018280546105f1906121ec565b801561063c5780601f106106135761010080835404028352916020019161063c565b820191905f5260205f20905b81548152906001019060200180831161061f57829003601f168201915b505050505091505090565b5f61065182611175565b505f8281527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930460205260409020546001600160a01b031661058d565b6106988282336111cc565b5050565b6001600160a01b03831615806106b957506001600160a01b038216155b6107305760405162461bcd60e51b815260206004820152602e60248201527f4e6f6e5472616e736665727261626c65455243373231546f6b656e3a206e6f6e60448201527f207472616e736665727261626c6500000000000000000000000000000000000060648201526084015b60405180910390fd5b61073b8383836111d9565b505050565b604080517f39f4c5dc4987ba10c22bccffc6aa83320b32e5efb44bc790d0fffcbb8492946260208083019190915281830188905260ff871660608301526001600160a01b038516608083015260a08083018790528351808403909101815260c08301845280519082012060075461190160f01b60e085015260e28401526101028084018290528451808503909101815261012290930190935281519101205f9190826107ec828661125c565b6001600160a01b03878116911614935050505095945050505050565b606060025f01828154811061081f5761081f612224565b905f5260205f20018054610832906121ec565b80601f016020809104026020016040519081016040528092919081815260200182805461085e906121ec565b80156108a95780601f10610880576101008083540402835291602001916108a9565b820191905f5260205f20905b81548152906001019060200180831161088c57829003601f168201915b50505050509050919050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff165f811580156108ff5750825b90505f8267ffffffffffffffff16600114801561091b5750303b155b905081158015610929575080155b156109475760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561097b57845468ff00000000000000001916680100000000000000001785555b6109ec89898080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a90819084018382808284375f9201919091525061128492505050565b5f5b6109f88d80612238565b9050811015610be5576002610a0d8e80612238565b83818110610a1d57610a1d612224565b9050602002810190610a2f919061227e565b82546001810184555f938452602090932090920191610a4e9183612305565b50610a57611bd9565b6001805480820182555f91909152610a989060029081027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf601908390611bf7565b50610b0b8d8d84818110610aae57610aae612224565b9050602002810190610ac091906123bf565b5f5b602002810190610ad2919061227e565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061129692505050565b60018381548110610b1e57610b1e612224565b5f918252602082206002909102010155610b5c8d8d84818110610b4357610b43612224565b9050602002810190610b5591906123bf565b6001610ac2565b60018381548110610b6f57610b6f612224565b905f5260205f209060020201600160028110610b8d57610b8d612224565b018190555060026001018e8060200190610ba79190612238565b84818110610bb757610bb7612224565b8354600180820186555f958652602095869020929095029390930135920191909155509190910190506109ee565b505f8055604080518082018252600781527f466865426c6f67000000000000000000000000000000000000000000000000006020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f918101919091527fc667c8a336a824636925e27af98cf090f0f09ad8b8a6e2513ecf75627dc4efcb918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160408051601f1981840301815291905280516020909101206007556008805473ffffffffffffffffffffffffffffffffffffffff1916321790558315610d3d57845468ff000000000000000019168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050505050505050565b61073b83838360405180602001604052805f815250610e52565b5f61058d82611175565b5f7f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab00793006001600160a01b038316610dba576040516322718ad960e21b81525f6004820152602401610727565b6001600160a01b039092165f908152600390920160205250604090205490565b6040518060800160405280605781526020016125956057913981565b7f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930180546060917f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300916105c5906121ec565b6106983383836112a2565b610e5d84848461069c565b610e6984848484611364565b50505050565b610e77611c35565b836001600160a01b0316610e8a87610d65565b6001600160a01b031614610ea057610ea06123dd565b610ead8686858786610740565b1515600114610ebe57610ebe6123dd565b610ec6611c35565b610ece611c4d565b610f1e60018860ff1681548110610ee757610ee7612224565b5f91825260208220600290910201905b01546003805460ff8b16908110610f1057610f10612224565b905f5260205f200154611483565b815260018054610f5a919060ff8a16908110610f3c57610f3c612224565b905f5260205f209060020201600160028110610ef757610ef7612224565b602082015281529695505050505050565b662386f26fc10000341015610fc25760405162461bcd60e51b815260206004820152601c60248201527f4648455f424c4f473a20696e73756666696369656e742066756e6473000000006044820152606401610727565b610fcd335f54611496565b5f54610fda906001612405565b5f9081556008546040516001600160a01b03909116913480156108fc02929091818181858888f19350505050158015611015573d5f803e3d5ffd5b50565b335f90815260066020526040812080546001929061104190849067ffffffffffffffff16612418565b92506101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550565b60606040518060800160405280605781526020016125956057913992915050565b826001600160a01b031661109d86610d65565b6001600160a01b0316146110b3576110b36123dd565b6110ca85858467ffffffffffffffff168685610740565b15156001146110db576110db6123dd565b6001600160a01b0383165f90815260046020908152604080832067ffffffffffffffff8616845290915281205460ff161515900361116e576001600160a01b0383165f90815260046020908152604080832067ffffffffffffffff861684528252808320805460ff1916600190811790915533845260059092528220805491929091611168908490612405565b90915550505b5050505050565b5f8181527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930260205260408120546001600160a01b03168061058d57604051637e27328960e01b815260048101849052602401610727565b61073b83838360016114af565b6001600160a01b03821661120257604051633250574960e11b81525f6004820152602401610727565b5f61120e83833361161f565b9050836001600160a01b0316816001600160a01b031614610e69576040516364283d7b60e01b81526001600160a01b0380861660048301526024820184905282166044820152606401610727565b5f805f8061126a8686611766565b92509250925061127a82826117af565b5090949350505050565b61128c611867565b61069882826118b7565b5f61058d8260036118fa565b7f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab00793006001600160a01b0383166112f557604051630b61174360e31b81526001600160a01b0384166004820152602401610727565b6001600160a01b038481165f818152600584016020908152604080832094881680845294825291829020805460ff191687151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a350505050565b6001600160a01b0383163b15610e6957604051630a85bd0160e11b81526001600160a01b0384169063150b7a02906113a6903390889087908790600401612440565b6020604051808303815f875af19250505080156113e0575060408051601f3d908101601f191682019092526113dd9181019061247b565b60015b611447573d80801561140d576040519150601f19603f3d011682016040523d82523d5f602084013e611412565b606091505b5080515f0361143f57604051633250574960e11b81526001600160a01b0385166004820152602401610727565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b1461116e57604051633250574960e11b81526001600160a01b0385166004820152602401610727565b606061148f8383611948565b9392505050565b610698828260405180602001604052805f815250611975565b7f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930081806114e457506001600160a01b03831615155b156115e2575f6114f385611175565b90506001600160a01b0384161580159061151f5750836001600160a01b0316816001600160a01b031614155b801561156f57506001600160a01b038082165f9081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079305602090815260408083209388168352929052205460ff16155b156115985760405163a9fbf51f60e01b81526001600160a01b0385166004820152602401610727565b82156115e05784866001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5f938452600401602052505060409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b5f8281527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930260205260408120547f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300906001600160a01b039081169084161561168c5761168c81858761198b565b6001600160a01b038116156116c8576116a75f865f806114af565b6001600160a01b0381165f908152600383016020526040902080545f190190555b6001600160a01b038616156116f8576001600160a01b0386165f9081526003830160205260409020805460010190555b5f858152600283016020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038a811691821790925591518893918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a495945050505050565b5f805f835160410361179d576020840151604085015160608601515f1a61178f888285856119ef565b9550955095505050506117a8565b505081515f91506002905b9250925092565b5f8260038111156117c2576117c2612496565b036117cb575050565b60018260038111156117df576117df612496565b036117fd5760405163f645eedf60e01b815260040160405180910390fd5b600282600381111561181157611811612496565b036118325760405163fce698f760e01b815260048101829052602401610727565b600382600381111561184657611846612496565b03610698576040516335e2f38360e21b815260048101829052602401610727565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff166118b557604051631afcd79f60e31b815260040160405180910390fd5b565b6118bf611867565b7f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300806118eb84826124aa565b5060018101610e6983826124aa565b5f80601f84511160018114611915576020850151915061191d565b845185015191505b5060208451101561148f57835161193590602061256a565b61194090600861257d565b1c9392505050565b60408051602080825281830190925260609160208201818036833701905050905082602082015292915050565b61197f8383611ab7565b61073b5f848484611364565b611996838383611b18565b61073b576001600160a01b0383166119c457604051637e27328960e01b815260048101829052602401610727565b60405163177e802f60e01b81526001600160a01b038316600482015260248101829052604401610727565b5f80807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115611a2857505f91506003905082611aad565b604080515f808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611a79573d5f803e3d5ffd5b5050604051601f1901519150506001600160a01b038116611aa457505f925060019150829050611aad565b92505f91508190505b9450945094915050565b6001600160a01b038216611ae057604051633250574960e11b81525f6004820152602401610727565b5f611aec83835f61161f565b90506001600160a01b0381161561073b576040516339e3563760e11b81525f6004820152602401610727565b5f6001600160a01b03831615801590611bd15750826001600160a01b0316846001600160a01b03161480611b8f57506001600160a01b038085165f9081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079305602090815260408083209387168352929052205460ff165b80611bd157505f8281527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930460205260409020546001600160a01b038481169116145b949350505050565b60405180604001604052806002906020820280368337509192915050565b8260028101928215611c25579160200282015b82811115611c25578251825591602001919060010190611c0a565b50611c31929150611c74565b5090565b6040518060200160405280611c48611c4d565b905290565b60405180604001604052806002905b6060815260200190600190039081611c5c5790505090565b5b80821115611c31575f8155600101611c75565b6001600160e01b031981168114611015575f80fd5b5f60208284031215611cad575f80fd5b813561148f81611c88565b5f81518084525f5b81811015611cdc57602081850181015186830182015201611cc0565b505f602082860101526020601f19601f83011685010191505092915050565b602081525f61148f6020830184611cb8565b5f60208284031215611d1d575f80fd5b5035919050565b80356001600160a01b0381168114611d3a575f80fd5b919050565b5f8060408385031215611d50575f80fd5b611d5983611d24565b946020939093013593505050565b5f805f60608486031215611d79575f80fd5b611d8284611d24565b9250611d9060208501611d24565b9150604084013590509250925092565b803560ff81168114611d3a575f80fd5b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112611dd3575f80fd5b813567ffffffffffffffff80821115611dee57611dee611db0565b604051601f8301601f19908116603f01168101908282118183101715611e1657611e16611db0565b81604052838152866020858801011115611e2e575f80fd5b836020870160208301375f602085830101528094505050505092915050565b5f805f805f60a08688031215611e61575f80fd5b85359450611e7160208701611da0565b935060408601359250611e8660608701611d24565b9150608086013567ffffffffffffffff811115611ea1575f80fd5b611ead88828901611dc4565b9150509295509295909350565b5f8083601f840112611eca575f80fd5b50813567ffffffffffffffff811115611ee1575f80fd5b602083019150836020828501011115611ef8575f80fd5b9250929050565b5f805f805f805f6080888a031215611f15575f80fd5b873567ffffffffffffffff80821115611f2c575f80fd5b908901906040828c031215611f3f575f80fd5b90975060208901359080821115611f54575f80fd5b818a0191508a601f830112611f67575f80fd5b813581811115611f75575f80fd5b8b60208260051b8501011115611f89575f80fd5b6020830198508097505060408a0135915080821115611fa6575f80fd5b611fb28b838c01611eba565b909650945060608a0135915080821115611fca575f80fd5b50611fd78a828b01611eba565b989b979a50959850939692959293505050565b5f60208284031215611ffa575f80fd5b61148f82611d24565b5f8060408385031215612014575f80fd5b61201d83611d24565b915060208301358015158114612031575f80fd5b809150509250929050565b5f805f806080858703121561204f575f80fd5b61205885611d24565b935061206660208601611d24565b925060408501359150606085013567ffffffffffffffff811115612088575f80fd5b61209487828801611dc4565b91505092959194509250565b5f805f805f60a086880312156120b4575f80fd5b853594506120c460208701611da0565b93506120d260408701611d24565b925060608601359150608086013567ffffffffffffffff811115611ea1575f80fd5b602080825282518282018290525f9190608084019060408501845b600281101561213e57603f1987850301825261212c848451611cb8565b9350918401919084019060010161210f565b50919695505050505050565b5f805f805f60a0868803121561215e575f80fd5b8535945061216e60208701611da0565b935061217c60408701611d24565b9250606086013567ffffffffffffffff8082168214612199575f80fd5b909250608087013590808211156121ae575f80fd5b50611ead88828901611dc4565b5f80604083850312156121cc575f80fd5b6121d583611d24565b91506121e360208401611d24565b90509250929050565b600181811c9082168061220057607f821691505b60208210810361221e57634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52603260045260245ffd5b5f808335601e1984360301811261224d575f80fd5b83018035915067ffffffffffffffff821115612267575f80fd5b6020019150600581901b3603821315611ef8575f80fd5b5f808335601e19843603018112612293575f80fd5b83018035915067ffffffffffffffff8211156122ad575f80fd5b602001915036819003821315611ef8575f80fd5b601f82111561073b57805f5260205f20601f840160051c810160208510156122e65750805b601f840160051c820191505b8181101561116e575f81556001016122f2565b67ffffffffffffffff83111561231d5761231d611db0565b6123318361232b83546121ec565b836122c1565b5f601f841160018114612362575f851561234b5750838201355b5f19600387901b1c1916600186901b17835561116e565b5f83815260208120601f198716915b828110156123915786850135825560209485019460019092019101612371565b50868210156123ad575f1960f88860031b161c19848701351681555b505060018560011b0183555050505050565b5f8235603e198336030181126123d3575f80fd5b9190910192915050565b634e487b7160e01b5f52600160045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b8082018082111561058d5761058d6123f1565b67ffffffffffffffff818116838216019080821115612439576124396123f1565b5092915050565b5f6001600160a01b038087168352808616602084015250836040830152608060608301526124716080830184611cb8565b9695505050505050565b5f6020828403121561248b575f80fd5b815161148f81611c88565b634e487b7160e01b5f52602160045260245ffd5b815167ffffffffffffffff8111156124c4576124c4611db0565b6124d8816124d284546121ec565b846122c1565b602080601f83116001811461250b575f84156124f45750858301515b5f19600386901b1c1916600185901b178555612562565b5f85815260208120601f198616915b828110156125395788860151825594840194600190910190840161251a565b508582101561255657878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b8181038181111561058d5761058d6123f1565b808202811582820484141761058d5761058d6123f156fe697066733a2f2f62616679626569673337696f6972373673376d67356f6f6265746e636f6a636d3363336878617379643472766964346a71687934676b61686567342f3f66696c656e616d653d302d5055472e6a736f6ea164736f6c6343000816000a";

type FHE_BLOGConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FHE_BLOGConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FHE_BLOG__factory extends ContractFactory {
  constructor(...args: FHE_BLOGConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FHE_BLOG & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FHE_BLOG__factory {
    return super.connect(runner) as FHE_BLOG__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FHE_BLOGInterface {
    return new Interface(_abi) as FHE_BLOGInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): FHE_BLOG {
    return new Contract(address, _abi, runner) as unknown as FHE_BLOG;
  }
}
