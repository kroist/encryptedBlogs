/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  FHEBlogFactory,
  FHEBlogFactoryInterface,
} from "../FHEBlogFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_implementation",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ERC1167FailedCreateClone",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "blogs",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "blogsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes[]",
            name: "cid",
            type: "bytes[]",
          },
          {
            internalType: "bytes32[]",
            name: "publicKey",
            type: "bytes32[]",
          },
        ],
        internalType: "struct BlogStorage",
        name: "_data",
        type: "tuple",
      },
      {
        internalType: "bytes[2][]",
        name: "_p",
        type: "bytes[2][]",
      },
      {
        internalType: "string",
        name: "_nft_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_nft_short_name",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "createBlog",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes[]",
            name: "cid",
            type: "bytes[]",
          },
          {
            internalType: "bytes32[]",
            name: "publicKey",
            type: "bytes32[]",
          },
        ],
        internalType: "struct BlogStorage",
        name: "_data",
        type: "tuple",
      },
      {
        internalType: "bytes[2][]",
        name: "_p",
        type: "bytes[2][]",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "createBlog",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "creator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "getBlogAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61018060405234801562000011575f80fd5b5060405162000ffa38038062000ffa8339810160408190526200003491620001e4565b604080518082018252601381527f417574686f72697a6174696f6e20746f6b656e00000000000000000000000000602080830191909152825180840190935260018352603160f81b908301529081816200008f825f62000161565b61012052620000a081600162000161565b61014052815160208084019190912060e052815190820120610100524660a0526200012d60e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a08201525f9060c00160405160208183030381529060405280519060200120905090565b60805250503060c0525050600280546001600160a01b031916331790556001600160a01b0316610160525f600455620003ef565b5f6020835110156200018057620001788362000199565b905062000193565b816200018d8482620002b1565b5060ff90505b92915050565b5f80829050601f81511115620001cf578260405163305a27a960e01b8152600401620001c691906200037d565b60405180910390fd5b8051620001dc82620003cb565b179392505050565b5f60208284031215620001f5575f80fd5b81516001600160a01b03811681146200020c575f80fd5b9392505050565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806200023c57607f821691505b6020821081036200025b57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115620002ac57805f5260205f20601f840160051c81016020851015620002885750805b601f840160051c820191505b81811015620002a9575f815560010162000294565b50505b505050565b81516001600160401b03811115620002cd57620002cd62000213565b620002e581620002de845462000227565b8462000261565b602080601f8311600181146200031b575f8415620003035750858301515b5f19600386901b1c1916600185901b17855562000375565b5f85815260208120601f198616915b828110156200034b578886015182559484019460019091019084016200032a565b50858210156200036957878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b5f602080835283518060208501525f5b81811015620003ab578581018301518582016040015282016200038d565b505f604082860101526040601f19601f8301168501019250505092915050565b805160208083015191908110156200025b575f1960209190910360031b1b16919050565b60805160a05160c05160e05161010051610120516101405161016051610bb06200044a5f395f8181610164015281816101c901526102b101525f61046c01525f61043b01525f50505f50505f50505f50505f5050610bb05ff3fe608060405234801561000f575f80fd5b506004361061007a575f3560e01c8063424646011161005857806342464601146100d857806352aa4300146100ed57806380f052d81461010057806384b0196e14610128575f80fd5b806302d05d3f1461007e5780630fa18019146100ae57806340c1847a146100c5575b5f80fd5b600254610091906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100b760045481565b6040519081526020016100a5565b6100916100d336600461059b565b610143565b6100eb6100e636600461064e565b6101c3565b005b6100eb6100fb36600461070b565b6102ab565b61009161010e36600461059b565b60036020525f90815260409020546001600160a01b031681565b610130610387565b6040516100a597969594939291906107b9565b6040513060388201526f5af43d82803e903d91602b57fd5bf3ff60248201527f00000000000000000000000000000000000000000000000000000000000000006014820152733d602d80600a3d3981f3363d3d373d3d3d363d738152605881018290526037600c820120607882015260556043909101205f905b92915050565b5f6101ee7f0000000000000000000000000000000000000000000000000000000000000000836103c9565b604051633d68eb1d60e01b81529091506001600160a01b03821690633d68eb1d90610229908c908c908c908c908c908c908c90600401610a69565b5f604051808303815f87803b158015610240575f80fd5b505af1158015610252573d5f803e3d5ffd5b5050600480545f908152600360205260408120805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0387161790558154935090915061029b83610ac6565b9190505550505050505050505050565b5f6102d67f0000000000000000000000000000000000000000000000000000000000000000836103c9565b604051633d68eb1d60e01b81529091506001600160a01b03821690633d68eb1d9061030990889088908890600401610aea565b5f604051808303815f87803b158015610320575f80fd5b505af1158015610332573d5f803e3d5ffd5b5050600480545f908152600360205260408120805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0387161790558154935090915061037b83610ac6565b91905055505050505050565b5f6060805f805f6060610398610434565b6103a0610465565b604080515f80825260208201909252600f60f81b9b939a50919850469750309650945092509050565b5f763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c175f526e5af43d82803e903d91602b57fd5bf38360781b1760205281603760095ff590506001600160a01b0381166101bd576040516330be1a3d60e21b815260040160405180910390fd5b60606104607f00000000000000000000000000000000000000000000000000000000000000005f61048e565b905090565b60606104607f000000000000000000000000000000000000000000000000000000000000000060015b606060ff83146104a8576104a183610537565b90506101bd565b8180546104b490610b71565b80601f01602080910402602001604051908101604052809291908181526020018280546104e090610b71565b801561052b5780601f106105025761010080835404028352916020019161052b565b820191905f5260205f20905b81548152906001019060200180831161050e57829003601f168201915b505050505090506101bd565b60605f61054383610574565b6040805160208082528183019092529192505f91906020820181803683375050509182525060208101929092525090565b5f60ff8216601f8111156101bd57604051632cd44ac360e21b815260040160405180910390fd5b5f602082840312156105ab575f80fd5b5035919050565b5f604082840312156105c2575f80fd5b50919050565b5f8083601f8401126105d8575f80fd5b50813567ffffffffffffffff8111156105ef575f80fd5b6020830191508360208260051b8501011115610609575f80fd5b9250929050565b5f8083601f840112610620575f80fd5b50813567ffffffffffffffff811115610637575f80fd5b602083019150836020828501011115610609575f80fd5b5f805f805f805f8060a0898b031215610665575f80fd5b883567ffffffffffffffff8082111561067c575f80fd5b6106888c838d016105b2565b995060208b013591508082111561069d575f80fd5b6106a98c838d016105c8565b909950975060408b01359150808211156106c1575f80fd5b6106cd8c838d01610610565b909750955060608b01359150808211156106e5575f80fd5b506106f28b828c01610610565b999c989b50969995989497949560800135949350505050565b5f805f806060858703121561071e575f80fd5b843567ffffffffffffffff80821115610735575f80fd5b610741888389016105b2565b95506020870135915080821115610756575f80fd5b50610763878288016105c8565b9598909750949560400135949350505050565b5f81518084525f5b8181101561079a5760208185018101518683018201520161077e565b505f602082860101526020601f19601f83011685010191505092915050565b60ff60f81b881681525f602060e060208401526107d960e084018a610776565b83810360408501526107eb818a610776565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825260208088019350909101905f5b8181101561083e57835183529284019291840191600101610822565b50909c9b505050505050505050505050565b5f808335601e19843603018112610865575f80fd5b830160208101925035905067ffffffffffffffff811115610884575f80fd5b8060051b3603821315610609575f80fd5b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b5f808335601e198436030181126108d2575f80fd5b830160208101925035905067ffffffffffffffff8111156108f1575f80fd5b803603821315610609575f80fd5b5f6040830161090e8384610850565b604086528281845260608701905060608260051b8801019350825f5b8381101561096757888603605f1901835261094582866108bd565b610950888284610895565b97505050602092830192919091019060010161092a565b50505050506109796020840184610850565b85830360208701528083527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8111156109b0575f80fd5b60051b8082602085013791909101602001949350505050565b5f8383855260208086019550808560051b830101845f5b87811015610a5c57848303601f19018952813536889003603e19018112610a05575f80fd5b87018360408101825f5b6002811015610a46578783038452610a2782866108bd565b610a32858284610895565b958b01959450505090880190600101610a0f565b50509a86019a94505050908301906001016109e0565b5090979650505050505050565b608081525f610a7b608083018a6108ff565b8281036020840152610a8e81898b6109c9565b90508281036040840152610aa3818789610895565b90508281036060840152610ab8818587610895565b9a9950505050505050505050565b5f60018201610ae357634e487b7160e01b5f52601160045260245ffd5b5060010190565b608081525f610afc60808301866108ff565b8281036020840152610b0f8185876109c9565b9050828103806040850152600882527f4648455f424c4f4700000000000000000000000000000000000000000000000060208301526040810160608501525060046040820152631192109360e21b606082015260808101915050949350505050565b600181811c90821680610b8557607f821691505b6020821081036105c257634e487b7160e01b5f52602260045260245ffdfea164736f6c6343000816000a";

type FHEBlogFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FHEBlogFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FHEBlogFactory__factory extends ContractFactory {
  constructor(...args: FHEBlogFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _implementation: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_implementation, overrides || {});
  }
  override deploy(
    _implementation: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_implementation, overrides || {}) as Promise<
      FHEBlogFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FHEBlogFactory__factory {
    return super.connect(runner) as FHEBlogFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FHEBlogFactoryInterface {
    return new Interface(_abi) as FHEBlogFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FHEBlogFactory {
    return new Contract(address, _abi, runner) as unknown as FHEBlogFactory;
  }
}
